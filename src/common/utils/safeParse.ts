import { z } from "zod"

export const safeParse = <T>(schema: z.ZodType<T>, data: unknown): T => {
  debugger
  const result = schema.safeParse(data)
  if (!result.success) {
    console.error("Invalid API response", result.error)
    throw new Error("Invalid API response")
  }
  return result.data
}

//  –ß—Ç–æ —Ç—É—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç: üîò
// safeParse = <T>(schema: z.ZodType<T>, data: unknown): T => {
// <T> ‚Äî —ç—Ç–æ generic-–ø–∞—Ä–∞–º–µ—Ç—Ä, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
//
// schema: z.ZodType<T> ‚Äî –∞—Ä–≥—É–º–µ–Ω—Ç —Ñ—É–Ω–∫—Ü–∏–∏, —ç—Ç–æ Zod-—Å—Ö–µ–º–∞ (–∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–∞–ª–∏–¥–∞—Ç–æ—Ä), –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–≤–æ–π ChangeTodolistTitleResponseSchema.
//
// data: unknown ‚Äî –¥–∞–Ω–Ω—ã–µ, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –≤–∞–ª–∏–¥–∏—Ä—É–µ–º. –¢–∏–ø unknown —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –∑–∞—Å—Ç–∞–≤–∏—Ç—å –≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë, —á—Ç–æ –ø—Ä–∏—à–ª–æ.

// const result = schema.safeParse(data) üà≥
// –í–æ—Ç —Ç—É—Ç —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ:
//
// safeParse ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –∏–∑ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Zod, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —É —Å—Ö–µ–º—ã.
//
// –û–Ω –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç –∏—Ö –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –≤–∏–¥–∞:
// type SafeParseReturnType<T> =
//   | { success: true; data: T }
//   | { success: false; error: ZodError }
// –¢–æ –µ—Å—Ç—å –¥–≤–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞:
//
// –ï—Å–ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ ‚Üí success: true –∏ –¥–∞–Ω–Ω—ã–µ –≤ data
//
// –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Üí success: false –∏ –æ—à–∏–±–∫–∞ –≤ error (—Ç–∏–ø–∞ ZodError)